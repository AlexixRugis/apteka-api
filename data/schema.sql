PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS users (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	apikey VARCHAR(120) NOT NULL UNIQUE,
	name VARCHAR(120) NOT NULL,
	surname VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS warehouses (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	name VARCHAR(120) NOT NULL
);

CREATE TABLE IF NOT EXISTS products (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(120) NOT NULL,
    tradename VARCHAR(120) NOT NULL,
    manufacturer VARCHAR(120) NOT NULL,
    image VARCHAR(120) NOT NULL,
    price INTEGER NOT NULL,
	optimal_quantity INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS products_users (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
	warehouse_id INTEGER REFERENCES warehouses(id) ON DELETE SET NULL,
	quantity INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS product_invoices (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	provider VARCHAR(120) NOT NULL,
	createdTime DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS products_invoices_items (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	invoice_id INTEGER REFERENCES product_invoices(id) ON DELETE CASCADE,
	product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
	price INTEGER NOT NULL,
	quantity INTEGER NOT NULL,
	expiration_date DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS issue_requests (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	purpose VARCHAR(512) NOT NULL,
	completed BOOLEAN DEFAULT (0) NOT NULL,
	createdTime DATETIME NOT NULL
);

CREATE TABLE IF NOT EXISTS issue_requests_items (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	issue_id INTEGER REFERENCES issue_requests(id) ON DELETE CASCADE,
	product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
	quantity INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS product_writeoffs (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
	createdTime DATETIME NOT NULL,
	quantity INTEGER NOT NULL,
	reason VARCHAR(512) NOT NULL
);

CREATE TABLE IF NOT EXISTS products_transfers (
	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
	createdTime DATETIME NOT NULL,
	product_id INTEGER REFERENCES products(id) ON DELETE CASCADE,
	warehouse_from INTEGER REFERENCES warehouses(id) ON DELETE CASCADE,
	warehouse_to INTEGER REFERENCES warehouses(id) ON DELETE CASCADE
);